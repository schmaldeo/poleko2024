@rendermode InteractiveServer
@using MudBlazor
@using PolekoWebApp.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.EntityFrameworkCore.Internal

@inject NavigationManager NavigationManager
@inject IDbContextFactory<ApplicationDbContext> DbContextFactory

<MudNavMenu Class="d-flex flex-column" Style="height: 100%;">
    <MudNavLink Href="/" Match="NavLinkMatch.All">Strona główna</MudNavLink>
    @* TODO find out why spacer doesnt work *@
    <AuthorizeView>
        <Authorized>
            <MudNavGroup Title="Devices" Expanded="true">
                @if (Sensors is null)
                {
                    <span>Ładowanie czujników...</span>
                }
                else
                {
                    @foreach (var sensor in Sensors)
                    {
                        <MudNavLink Href="@($"Device/{sensor.SensorId}")">
                            @(sensor.IpAddress ?? sensor.MacAddress ?? $"Czujnik {sensor.SensorId}")
                        </MudNavLink>
                    }
                }
            </MudNavGroup>
            <MudDivider />
            <MudNavLink Href="Account/Manage" Class="justify-self-end">@context.User.Identity?.Name</MudNavLink>
            <MudNavLink>
                @* this needs to be like this because there's a logout endpoint*@
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken/>
                    <input type="hidden" name="ReturnUrl" value="@NavigationManager.ToBaseRelativePath(NavigationManager.Uri)"/>
                    @* position absolute to have the button clip over the Logout text, otherwise it stays centered no 
                    matter what *@
                    <button type="submit" style="height: 100%; width: 100%; position: absolute"></button>
                </form>
                Wyloguj się
            </MudNavLink>
        </Authorized>
        <NotAuthorized>
            <MudNavLink Href="Account/Login" Class="justify-self-end">Zaloguj się</MudNavLink>
            <MudNavLink Href="Account/Register">Zarejestruj się</MudNavLink>
        </NotAuthorized>
    </AuthorizeView>
</MudNavMenu>

@code {
    private Sensor[]? Sensors { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await using var dbContext = await DbContextFactory.CreateDbContextAsync();
        Sensors = await dbContext.Sensors.ToArrayAsync();
        await base.OnInitializedAsync();
    }
}
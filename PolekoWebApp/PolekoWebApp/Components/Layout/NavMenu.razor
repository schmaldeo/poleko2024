@rendermode InteractiveServer
@using MudBlazor
@using PolekoWebApp.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.EntityFrameworkCore.Internal
@using PolekoWebApp.Components.Services

@inject NavigationManager NavigationManager
@inject IDbContextFactory<ApplicationDbContext> DbContextFactory
@inject SensorService SensorService

<MudNavMenu Class="d-flex flex-column" Style="height: 100%;">
    <MudNavLink Href="/" Match="NavLinkMatch.All">Strona główna</MudNavLink>
    <AuthorizeView>
        <Authorized>
                @if (Sensors is null)
                {
                    <span>Ładowanie czujników...</span>
                }
                else
                {
                    @if (Sensors.Length > 0)
                    {
                        <MudNavGroup Title="Czujniki" Expanded="true">
                            @foreach (var sensor in Sensors)
                            {
                                <MudNavLink Href="@($"Device/{sensor.SensorId}")">
                                    @((sensor.UsesDhcp ? sensor.MacAddress : sensor.IpAddress) ?? $"Czujnik {sensor.SensorId}")
                                </MudNavLink>
                            }
                        </MudNavGroup>
                    }
                }
                @* need to change context for nested AuthorizeViews to work *@
                <AuthorizeView Roles="Admin, SuperAdmin" Context="addDevice">
                    <Authorized>
                        <MudNavLink Href="Device/Add">Dodaj nowy czujnik</MudNavLink>
                    </Authorized>
                </AuthorizeView>
            @* border style to place the divider on the bottom just above the account settings *@
            <MudDivider Style="border-style: none none solid none" />
            <MudNavLink Href="Account/Manage">@context.User.Identity?.Name</MudNavLink>
            <div class="mud-nav-item mud-ripple">
            @* need to wrap this in divs because with NavLink it'd be highlighted all the time *@
            <a class="mud-nav-link">
                <div class="mud-nav-link-text">
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken/>
                    <input type="hidden" name="ReturnUrl" value="@NavigationManager.ToBaseRelativePath(NavigationManager.Uri)"/>
                    @* position absolute to have the button clip over the Logout text, otherwise it stays centered no 
                        matter what *@
                    <button type="submit" style="height: 100%; width: 100%; position: absolute"></button>
                </form>
                Wyloguj się
                </div>
            </a>
            </div>
        </Authorized>
        <NotAuthorized>
            <MudDivider Style="border-style: none none solid none" />
            <MudNavLink Href="Account/Login" Class="justify-self-end">Zaloguj się</MudNavLink>
            <MudNavLink Href="Account/Register">Zarejestruj się</MudNavLink>
        </NotAuthorized>
    </AuthorizeView>
</MudNavMenu>

@code {
    private Sensor[]? Sensors { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Sensors = SensorService.Sensors.ToArray();
        await base.OnInitializedAsync();
    }
}
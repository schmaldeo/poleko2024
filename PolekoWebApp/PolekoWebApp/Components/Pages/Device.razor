@page "/device/{id}"
@attribute [Authorize]

@using PolekoWebApp.Data
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ApplicationDbContext> DbContextFactory

<PageTitle>@(Sensor is null ? "Błąd" : $"{Sensor.IpAddress ?? Sensor.MacAddress}")</PageTitle>

@if (Sensor is null)
{
    @if (Error)
    {
        <h1>Czujnik o podanym ID nie istnieje</h1>
    }
    else
    {
        <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true"/>
    }
}
else
{
    <span>@Sensor.IpAddress</span>
    <span>@Sensor.MacAddress</span>
}

@code {
    [Parameter]
    public string? Id { get; set; }
    
    private bool Error { get; set; }
    
    private Sensor? Sensor { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await using var dbContext = await DbContextFactory.CreateDbContextAsync();
        try
        {
            Sensor = await dbContext.Sensors.Where(x => x.SensorId.ToString() == Id).FirstAsync();
        }
        catch (InvalidOperationException)
        {
            Error = true;
        }
        await base.OnInitializedAsync();
    }
}